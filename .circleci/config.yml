# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/

version: 2.1

orbs:
  #codecov: codecov/codecov@3.3.0
  macos: circleci/macos@2

# Workflows orchestrate a set of jobs to be run;
workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-and-test

jobs:

  build-and-test:
    macos:
      xcode: 15.1.0 # Specify the Xcode version to use

    steps:
      - checkout

      # restore pods related caches
      - restore_cache:
          keys:
            - 1-gems-{{ checksum "Gemfile.lock" }}

      # make sure we're on the right version of cocoapods
      - run:
          name: Verify Cocoapods Version
          command: bundle check || bundle install --path vendor/bundle

      # save cocoapods version gem data
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # restore pods related caches
      - restore_cache:
          keys:
            - cocoapods-cache-v5-{{ arch }}-{{ .Branch }}-{{ checksum "Podfile.lock" }}
            - cocoapods-cache-v5-{{ arch }}-{{ .Branch }}
            - cocoapods-cache-v5

      # install CocoaPods - using default CocoaPods version, not the bundle
      - run:
          name: Repo Update & Install CocoaPods
          command: make ci-pod-install

      # save pods related files
      - save_cache:
          name: Saving CocoaPods Cache
          key: cocoapods-cache-v5-{{ arch }}-{{ .Branch }}-{{ checksum "Podfile.lock" }}
          paths:
            - ./Pods
            - ~/.cocoapods

      - run:
          name: Lint Source Code
          command: make lint

      # pre-start the simulator to prevent timeouts
      - macos/preboot-simulator:
          platform: "iOS"
          version: "17.2"
          device: "iPhone 15"

      - run:
          name: Run Tests
          command: make test
          
      # - codecov/upload:
      #     flags: aepassurance-ios-tests
      #     upload_name: Coverage Report for AEPAssurance iOS Tests
      #     xtra_args: -c -v --xc --xp build/AEPAssurance-ios.xcresult

      # verify XCFramework archive builds
      - run:
          name: Build XCFramework
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ] || [ "${CIRCLE_BRANCH}" == "staging" ]; then
              make ci-archive
            fi
